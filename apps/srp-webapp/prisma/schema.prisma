// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum CorporationDivisionJournalEntryContextIdType {
  structure_id
  station_id
  market_transaction_id
  character_id
  corporation_id
  alliance_id
  eve_system
  industry_job_id
  contract_id
  planet_id
  system_id
  type_id
}

model AccountingTokens {
  // The ID of the character
  characterId  Int      @id
  // when this character token was harvested
  createdAt    DateTime @default(now())
  // the (most recent) access token. may be expired.
  accessToken  String   @db.VarChar(4096)
  // the refresh token
  refreshToken String
}

model CorporationWalletJournalEntry {
  // field 'id' in ESI. Unique journal entry ID.
  entryId       BigInt                                        @id
  // field 'ref_type' in ESI
  entryType     String
  // The ID of the corporation this journal entry belongs to
  corporationId Int
  // The wallet division ID of the corporation this entry belongs to
  division      Int
  // Amoung of ISK given or taken from the wallet as a result of the given transaction.
  // Positive when ISK is deposited into the wallet and negative when ISK is withdrawn.
  amount        Decimal?
  // Wallet balance after the transaction occurred
  balance       Decimal?
  // An ID that gives extra context to the particular transaction. Because of legacy reasons the context is completely
  // different per entryType and means different things. It is also possible to not have a contextId.
  contextId     Int?
  // The type of the given contextId if present
  contextIdType CorporationDivisionJournalEntryContextIdType?
  // Date and time of the transaction
  date          DateTime
  // The reason for the transaction. Mirrors what is seen in the client.
  description   String
  // The ID of the first party involved in the transaction. This attribute has no consistency and is different or non
  // existant for particular entryTypes. The description attribute will help make sense of what this attribute means.
  // For more info about the given ID it can be dropped into the /universe/names ESI route to determine type and name.
  firstPartyId  Int?
  // The user stated reason for the transaction. Only applies to some entryTypes.
  reason        String?
  // Similar to firstPartyId: the ID of the second party involved in the transaction.
  secondPartyId Int?
  // Tax amount received. Only applies to tax-related transactions.
  tax           Decimal?
  // The corporation ID receiving any tax paid. Only applies to tax related transactions.
  taxReceiverId Int?
}
